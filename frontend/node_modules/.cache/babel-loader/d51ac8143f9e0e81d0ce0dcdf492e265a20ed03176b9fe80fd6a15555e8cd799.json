{"ast":null,"code":"var _jsxFileName = \"/Users/polisettiveeravenkatavijayasubhash/Desktop/Patient_Management_System/frontend/src/components/PatientEdit.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport '../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientEdit() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    address: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  useEffect(() => {\n    api.get(`/patients/${id}`).then(res => setForm(res.data)).catch(err => console.error('Failed to load patient:', err));\n  }, [id]);\n  useEffect(() => {\n    if (touched.email) {\n      if (!form.email) {\n        setErrors(prev => ({\n          ...prev,\n          email: 'Email is required'\n        }));\n      } else if (!validateEmail(form.email)) {\n        setErrors(prev => ({\n          ...prev,\n          email: 'Please enter a valid email address'\n        }));\n      } else {\n        setErrors(prev => ({\n          ...prev,\n          email: null\n        }));\n      }\n    }\n  }, [form.email, touched.email]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  const handleBlur = e => {\n    const {\n      name\n    } = e.target;\n    setTouched(prev => ({\n      ...prev,\n      [name]: true\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!form.firstname || !form.lastname || !form.email || !form.address) {\n      alert('Please fill in all fields correctly.');\n      return;\n    }\n    if (!validateEmail(form.email)) {\n      setTouched(prev => ({\n        ...prev,\n        email: true\n      }));\n      setErrors(prev => ({\n        ...prev,\n        email: 'Please enter a valid email address'\n      }));\n      alert('Please enter a valid email address.');\n      return;\n    }\n    api.put(`/patients/${id}`, form).then(() => {\n      alert('Patient updated successfully');\n      navigate('/');\n    }).catch(err => {\n      var _err$response, _err$response$data;\n      if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.error) {\n        alert(err.response.data.error);\n      } else {\n        alert('Update failed. Please try again.');\n        console.error('Update failed:', err);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"patient-edit\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"firstname\",\n      value: form.firstname,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      placeholder: \"First Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"lastname\",\n      value: form.lastname,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      placeholder: \"Last Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        value: form.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        placeholder: \"Email\",\n        className: errors.email && touched.email ? \"input-error\" : \"\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"address\",\n      value: form.address,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      placeholder: \"Address\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientEdit, \"znhvhe+Z9MW3PEUg1YvzKvZqQWU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PatientEdit;\nexport default PatientEdit;\nvar _c;\n$RefreshReg$(_c, \"PatientEdit\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","api","jsxDEV","_jsxDEV","PatientEdit","_s","id","navigate","form","setForm","firstname","lastname","email","address","errors","setErrors","touched","setTouched","validateEmail","emailRegex","test","get","then","res","data","catch","err","console","error","prev","handleChange","e","name","value","target","handleBlur","handleSubmit","preventDefault","alert","put","_err$response","_err$response$data","response","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","placeholder","required","type","_c","$RefreshReg$"],"sources":["/Users/polisettiveeravenkatavijayasubhash/Desktop/Patient_Management_System/frontend/src/components/PatientEdit.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport '../styles/styles.css';\n\nfunction PatientEdit() {\n  const { id } = useParams(); \n  const navigate = useNavigate(); \n\n  const [form, setForm] = useState({ firstname: '', lastname: '', email: '', address: '' });\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  useEffect(() => {\n    api.get(`/patients/${id}`)\n      .then(res => setForm(res.data))\n      .catch(err => console.error('Failed to load patient:', err));\n  }, [id]);\n\n  useEffect(() => {\n    if (touched.email) {\n      if (!form.email) {\n        setErrors(prev => ({ ...prev, email: 'Email is required' }));\n      } else if (!validateEmail(form.email)) {\n        setErrors(prev => ({ ...prev, email: 'Please enter a valid email address' }));\n      } else {\n        setErrors(prev => ({ ...prev, email: null }));\n      }\n    }\n  }, [form.email, touched.email]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setForm({ ...form, [name]: value });\n  };\n\n  const handleBlur = (e) => {\n    const { name } = e.target;\n    setTouched(prev => ({ ...prev, [name]: true }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (!form.firstname || !form.lastname || !form.email || !form.address) {\n      alert('Please fill in all fields correctly.');\n      return;\n    }\n    \n    if (!validateEmail(form.email)) {\n      setTouched(prev => ({ ...prev, email: true }));\n      setErrors(prev => ({ ...prev, email: 'Please enter a valid email address' }));\n      alert('Please enter a valid email address.');\n      return;\n    }\n    \n    api.put(`/patients/${id}`, form)\n      .then(() => {\n        alert('Patient updated successfully');\n        navigate('/'); \n      })\n      .catch(err => {\n        if (err.response?.data?.error) {\n          alert(err.response.data.error);\n        } else {\n          alert('Update failed. Please try again.');\n          console.error('Update failed:', err);\n        }\n      });\n  };\n\n  return (\n    <form className=\"patient-edit\" onSubmit={handleSubmit}>\n      <h2>Edit Patient</h2>\n      <input\n        name=\"firstname\"\n        value={form.firstname}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        placeholder=\"First Name\"\n        required\n      />\n      <input\n        name=\"lastname\"\n        value={form.lastname}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        placeholder=\"Last Name\"\n        required\n      />\n      \n      <div className=\"form-field\">\n        <input\n          name=\"email\"\n          value={form.email}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          placeholder=\"Email\"\n          className={errors.email && touched.email ? \"input-error\" : \"\"}\n          required\n        />\n        {errors.email && touched.email && (\n          <div className=\"error-message\">{errors.email}</div>\n        )}\n      </div>\n      \n      <input\n        name=\"address\"\n        value={form.address}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        placeholder=\"Address\"\n        required\n      />\n      <button type=\"submit\">Update</button>\n    </form>\n  );\n}\n\nexport default PatientEdit;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}